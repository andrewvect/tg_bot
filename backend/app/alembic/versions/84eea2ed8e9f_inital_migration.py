"""Inital Migration

Revision ID: 84eea2ed8e9f
Revises:
Create Date: 2025-02-02 06:38:59.561282

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '84eea2ed8e9f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('level',
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.CheckConstraint('level >= 0', name=op.f('ck_level_check_level_positive')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_level'))
    )
    op.create_index(op.f('ix_level_level'), 'level', ['level'], unique=False)
    op.create_index(op.f('ix_level_title'), 'level', ['title'], unique=True)
    op.create_table('user',
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('user_name', sa.Text(), nullable=True),
    sa.Column('first_name', sa.Text(), nullable=True),
    sa.Column('second_name', sa.Text(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=False),
    sa.Column('date_registration', sa.DateTime(), nullable=False),
    sa.Column('role', sa.Integer(), nullable=False),
    sa.Column('paid', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('telegram_id', 'id', name=op.f('pk_user'))
    )
    op.create_index(op.f('ix_user_telegram_id'), 'user', ['telegram_id'], unique=True)
    op.create_table('word',
    sa.Column('foreign_word', sa.String(length=100), nullable=False),
    sa.Column('native_word', sa.String(length=100), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('legend', sa.String(), nullable=True),
    sa.Column('transcription', sa.String(), nullable=True),
    sa.Column('voice_id', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_word'))
    )
    op.create_index(op.f('ix_word_foreign_word'), 'word', ['foreign_word'], unique=True)
    op.create_table('card',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('word_id', sa.BigInteger(), nullable=False),
    sa.Column('count_of_views', sa.Integer(), nullable=False),
    sa.Column('last_view', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.CheckConstraint('count_of_views >= 0', name=op.f('ck_card_check_count_of_views_non_negative')),
    sa.ForeignKeyConstraint(['user_id'], ['user.telegram_id'], name=op.f('fk_card_user_id_user')),
    sa.ForeignKeyConstraint(['word_id'], ['word.id'], name=op.f('fk_card_word_id_word')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_card')),
    sa.UniqueConstraint('user_id', 'word_id', name='user_word_unique')
    )
    op.create_index(op.f('ix_card_user_id'), 'card', ['user_id'], unique=False)
    op.create_index(op.f('ix_card_word_id'), 'card', ['word_id'], unique=False)
    op.create_table('invoice',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('invoice_id', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('payload', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.CheckConstraint('price >= 0', name=op.f('ck_invoice_check_price_positive')),
    sa.ForeignKeyConstraint(['user_id'], ['user.telegram_id'], name=op.f('fk_invoice_user_id_user')),
    sa.PrimaryKeyConstraint('invoice_id', 'id', name=op.f('pk_invoice'))
    )
    op.create_index('idx_invoice_status', 'invoice', ['status'], unique=False)
    op.create_index('idx_invoice_user_id', 'invoice', ['user_id'], unique=False)
    op.create_table('sentence',
    sa.Column('native_text', sa.String(length=255), nullable=False),
    sa.Column('foreign_text', sa.String(length=255), nullable=False),
    sa.Column('word_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['word_id'], ['word.id'], name=op.f('fk_sentence_word_id_word')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sentence'))
    )
    op.create_index(op.f('ix_sentence_native_text'), 'sentence', ['native_text'], unique=False)
    op.create_index(op.f('ix_sentence_word_id'), 'sentence', ['word_id'], unique=False)
    op.create_table('settings',
    sa.Column('spoiler_settings', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.CheckConstraint('spoiler_settings IN (0, 1, 2, 3, 4)', name=op.f('ck_settings_check_spoiler_settings')),
    sa.ForeignKeyConstraint(['user_id'], ['user.telegram_id'], name=op.f('fk_settings_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_settings'))
    )
    op.create_index(op.f('ix_settings_user_id'), 'settings', ['user_id'], unique=True)
    op.create_table('statistic',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('create_card', sa.JSON(), nullable=False),
    sa.Column('known_card', sa.JSON(), nullable=False),
    sa.Column('failed_review', sa.JSON(), nullable=False),
    sa.Column('success_review', sa.JSON(), nullable=False),
    sa.Column('master_card', sa.JSON(), nullable=False),
    sa.Column('readed_texts', sa.JSON(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.telegram_id'], name=op.f('fk_statistic_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_statistic'))
    )
    op.create_index(op.f('ix_statistic_user_id'), 'statistic', ['user_id'], unique=True)
    op.create_table('texts',
    sa.Column('foreign_title', sa.String(length=255), nullable=False),
    sa.Column('native_title', sa.String(length=255), nullable=False),
    sa.Column('foreign_text', sa.Text(), nullable=False),
    sa.Column('native_text', sa.Text(), nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['level_id'], ['level.id'], name=op.f('fk_texts_level_id_level')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_texts'))
    )
    op.create_index(op.f('ix_texts_foreign_title'), 'texts', ['foreign_title'], unique=False)
    op.create_index(op.f('ix_texts_native_title'), 'texts', ['native_title'], unique=False)
    op.create_table('usertext',
    sa.Column('user_telegram_id', sa.Integer(), nullable=False),
    sa.Column('text_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['text_id'], ['texts.id'], name=op.f('fk_usertext_text_id_texts')),
    sa.ForeignKeyConstraint(['user_telegram_id'], ['user.telegram_id'], name=op.f('fk_usertext_user_telegram_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_usertext')),
    sa.UniqueConstraint('user_telegram_id', 'text_id', name='user_text_unique')
    )
    op.create_index(op.f('ix_usertext_text_id'), 'usertext', ['text_id'], unique=False)
    op.create_index(op.f('ix_usertext_user_telegram_id'), 'usertext', ['user_telegram_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_usertext_user_telegram_id'), table_name='usertext')
    op.drop_index(op.f('ix_usertext_text_id'), table_name='usertext')
    op.drop_table('usertext')
    op.drop_index(op.f('ix_texts_native_title'), table_name='texts')
    op.drop_index(op.f('ix_texts_foreign_title'), table_name='texts')
    op.drop_table('texts')
    op.drop_index(op.f('ix_statistic_user_id'), table_name='statistic')
    op.drop_table('statistic')
    op.drop_index(op.f('ix_settings_user_id'), table_name='settings')
    op.drop_table('settings')
    op.drop_index(op.f('ix_sentence_word_id'), table_name='sentence')
    op.drop_index(op.f('ix_sentence_native_text'), table_name='sentence')
    op.drop_table('sentence')
    op.drop_index('idx_invoice_user_id', table_name='invoice')
    op.drop_index('idx_invoice_status', table_name='invoice')
    op.drop_table('invoice')
    op.drop_index(op.f('ix_card_word_id'), table_name='card')
    op.drop_index(op.f('ix_card_user_id'), table_name='card')
    op.drop_table('card')
    op.drop_index(op.f('ix_word_foreign_word'), table_name='word')
    op.drop_table('word')
    op.drop_index(op.f('ix_user_telegram_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_level_title'), table_name='level')
    op.drop_index(op.f('ix_level_level'), table_name='level')
    op.drop_table('level')
    # ### end Alembic commands ###
