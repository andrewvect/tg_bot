// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from "./core/CancelablePromise"
import { OpenAPI } from "./core/OpenAPI"
import { request as __request } from "./core/request"
import type {
  HealthCheckHealthCheckResponse,
  LoginLoginAccessTokenData,
  LoginLoginAccessTokenResponse,
  SettingsGetUserSettingsResponse,
  SettingsSetUserSettingsData,
  SettingsSetUserSettingsResponse,
  UtilsGetNewWordResponse,
  UtilsNewCardData,
  UtilsNewCardResponse,
  UtilsGetReviewWordsResponse,
  UtilsAddReviewData,
  UtilsAddReviewResponse,
  UtilsGetReviewWordsCountResponse,
  WebhookWebhookResponse,
} from "./types.gen"

export class HealthCheckService {
  /**
   * Health Check
   * Health check endpoint.
   * @returns unknown Successful Response
   * @throws ApiError
   */
  public static healthCheck(): CancelablePromise<HealthCheckHealthCheckResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/utils/health-check/",
    })
  }
}

export class LoginService {
  /**
   * Login Access Token
   * @param data The data for the request.
   * @param data.requestBody
   * @returns ResponceToken Successful Response
   * @throws ApiError
   */
  public static loginAccessToken(
    data: LoginLoginAccessTokenData,
  ): CancelablePromise<LoginLoginAccessTokenResponse> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/login/access-token",
      body: data.requestBody,
      mediaType: "application/json",
      errors: {
        422: "Validation Error",
      },
    })
  }
}

export class SettingsService {
  /**
   * Get User Settings
   * Get user settings
   * @returns SettingsResponse Successful Response
   * @throws ApiError
   */
  public static getUserSettings(): CancelablePromise<SettingsGetUserSettingsResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/settings/",
    })
  }

  /**
   * Set User Settings
   * Set user settings
   * @param data The data for the request.
   * @param data.requestBody
   * @returns SettingsResponse Successful Response
   * @throws ApiError
   */
  public static setUserSettings(
    data: SettingsSetUserSettingsData,
  ): CancelablePromise<SettingsSetUserSettingsResponse> {
    return __request(OpenAPI, {
      method: "PUT",
      url: "/api/v1/settings/",
      body: data.requestBody,
      mediaType: "application/json",
      errors: {
        422: "Validation Error",
      },
    })
  }
}

export class UtilsService {
  /**
   * Get New Word
   * Get next new word for user to create card
   * @returns WordsResponse Successful Response
   * @throws ApiError
   */
  public static getNewWord(): CancelablePromise<UtilsGetNewWordResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/cards/",
    })
  }

  /**
   * New Card
   * Create a new card for the user after verifying the token
   * @param data The data for the request.
   * @param data.requestBody
   * @returns NewCardResponce Successful Response
   * @throws ApiError
   */
  public static newCard(
    data: UtilsNewCardData,
  ): CancelablePromise<UtilsNewCardResponse> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/cards/",
      body: data.requestBody,
      mediaType: "application/json",
      errors: {
        422: "Validation Error",
      },
    })
  }

  /**
   * Get Review Words
   * @returns WordsResponse Successful Response
   * @throws ApiError
   */
  public static getReviewWords(): CancelablePromise<UtilsGetReviewWordsResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/cards/review/",
    })
  }

  /**
   * Add Review
   * Add review to word card
   * @param data The data for the request.
   * @param data.requestBody
   * @returns ReviewResponse Successful Response
   * @throws ApiError
   */
  public static addReview(
    data: UtilsAddReviewData,
  ): CancelablePromise<UtilsAddReviewResponse> {
    return __request(OpenAPI, {
      method: "PATCH",
      url: "/api/v1/cards/review/",
      body: data.requestBody,
      mediaType: "application/json",
      errors: {
        422: "Validation Error",
      },
    })
  }

  /**
   * Get Review Words Count
   * Get count of words available for review
   * @returns number Successful Response
   * @throws ApiError
   */
  public static getReviewWordsCount(): CancelablePromise<UtilsGetReviewWordsCountResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/v1/cards/review/count",
    })
  }
}

export class WebhookService {
  /**
   * Webhook
   * Handle incoming updates from Telegram bot.
   *
   * Args:
   * request: FastAPI request object containing the update from Telegram
   *
   * Returns:
   * Response with appropriate status code
   * @returns unknown Successful Response
   * @throws ApiError
   */
  public static webhook(): CancelablePromise<WebhookWebhookResponse> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/v1/webhook/",
    })
  }
}
